{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CO",
				"COVID-19"
			],
			[
				"Rese",
				"Research"
			],
			[
				"re",
				"request"
			],
			[
				"File",
				"Filename"
			]
		]
	},
	"buffers":
	[
		{
			"file": "firmware-changes.html",
			"settings":
			{
				"buffer_size": 36872,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "updatefirmwaremethods.html",
			"settings":
			{
				"buffer_size": 24071,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 389.0,
		"last_filter": "xml",
		"selected_items":
		[
			[
				"xml",
				"Indent XML"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indexing Status"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Add",
				"Package Control: Add Repository"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/dwormuth/Sites/thordb.org/bucketpolicy.txt",
		"/Users/dwormuth/Documents/db/Recollector/ElectronicParts.xml",
		"/Users/dwormuth/source/shellscripts/iptable_raw",
		"/Users/dwormuth/Documents/SAS/Letters/header.tex",
		"/Users/dwormuth/Documents/Qliqsoft.txt",
		"/Users/dwormuth/Documents/SJHEmployment",
		"/Users/dwormuth/Dropbox/loa86",
		"/Users/dwormuth/Dropbox/Astronomy/ServoCat70A/iss.txt",
		"/Users/dwormuth/Dropbox/Astronomy/AstroPlanner/JamesvilleHorizon.csv",
		"/Users/dwormuth/Dropbox/Astronomy/AstroPlanner/comet.dat",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/CHSTB_Hex",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/CHSTB_Bin",
		"/Users/dwormuth/Dropbox/Astronomy/ServoCat70A/lovejoy.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/EchoComments/BinaryCodedConcepts.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/TestingTeam.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/PDocTrainingThoughts",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/EchoComments/SoarianCardiologyIndications141202.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/EchoComments/Textwords",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/EchoComments/counted.textwords.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/EchoComments/SpelCorrectedWordList.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/ZynxEvidence/ExistingTopics.txt",
		"/Users/dwormuth/Documents/Medical/Crouse_CPOE/EchoComments/CountSpelCorrectedWordList.txt"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "firmware-changes.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36872,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "updatefirmwaremethods.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24071,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 109.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Gemini-2.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
